- set_meta_tags title: "フォローリスト"
- breadcrumb    :myauction_something, "フォローリスト"

h4 フォローリスト

= paginate @pfollows

- if @pfollows.length == 0
  p フォローリストに登録している出品会社はありません
- else
  .table-responsive
    table.table.table-hover.table-condensed.table-striped.product-table
      tr
        th 出品会社名
        th 評価
        th 最新の出品商品
        th
      - @pfollows.each do |fo|
        tr
          td
             = link_to fo.to_user.company, "/products?q[company_id_eq]=#{fo.to_user_id}"
             .follow-button-area
               = link_to "/myauction/alerts/new?alert[company_id]=#{fo.to_user_id}&alert[name]=△#{fo.to_user.company} 新着通知", method: :get, class: "btn btn-default" do
                 i.fa-solid.fa-bell.alert-bell
                 span.btn-content 出品会社の新着メール通知
          td.h4
            span.glyphicon.glyphicon-certificate.star-good
            =< number_with_delimiter fo.to_user.count_star_good
            br
            span.glyphicon.glyphicon-cloud.star-bad
            =< number_with_delimiter fo.to_user.count_star_bad
          td
            - Product.status(Product::STATUS[:start]).where(user_id: fo.to_user_id).order(dulation_start: :desc).limit(Follow::PRODUCTS_NUM).each do |pr|
              / = render "/main/product_panel", product: pr, r: :flw_new
              = render "/products/product_panel_02", product: pr, r: :flw_new
          td
            - unless params[:finished]
              = link_to({ action: :destroy, id: fo.id }, method: :delete, class: "btn btn-default btn-xs") do
                span.glyphicon.glyphicon-remove
                =< "解除"
