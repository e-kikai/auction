- set_meta_tags title: "出品する"
- breadcrumb    :myauction_products_new

scss:

= form_for @product, url: "/myauction/products", method: :post, html: { class: 'form-horizontal' } do |f|
  .col-md-offset-2.col-md-8
    - if f.object.errors.full_messages.present?
      .alert.alert-danger
        ul
          - f.object.errors.full_messages.each do |msg|
            li = msg

  table.table.table-hover.table-condensed.form-table
    tr
      th = f.label :category_id, class: :required
      td
        = f.select :category_id, Category.pluck(:name, :id), {include_blank: "-- ジャンルを選択 --"}, class: "form-control", required: "required"
    tr
      th = f.label :name, class: :required
      td = f.text_field :name, class: "form-control", required: "required"
    tr
      th = f.label :description
      td = f.text_area :description, class: "form-control"
    tr
      th = f.label :dulation_end
      td = f.datetime_select :dulation_end, :default => Time.now + 7.day, minute_step: 5, class: "form-control"
    tr.form-inline
      th = f.label :start_price, class: :required
      td = (f.text_field :start_price, class: "form-control price", required: "required") + " 円"
    tr.form-inline
      th = f.label :prompt_dicision_price
      td = (f.text_field :prompt_dicision_price, class: "form-control price") + " 円"

    tr
      th 画像
      td
        = f.fields_for :product_images do |pi|
          = pi.file_field :image

    tr
      th = f.label :shipping_user, class: :required
      td.form-inline
        - Product.shipping_users.each do |k, v|
          label.radio-inline = f.radio_button(:shipping_user, k, inline: true) + k

    tr
      th = f.label :state, class: :required
      td
        .form-inline
          - Product.states.each do |k, v|
            label.radio-inline = f.radio_button(:state, k, inline: true) + k
        . = f.text_field :state_comment, class: "form-control"
        p.help-block 【任意】備考があれば記入してください 例) ジャンク品、開封後一度も使っていません、など

    tr
      th = f.label :returns, class: :required
      td
        .form-inline
          = f.check_box :returns, {}, true, false
        . = f.text_field :returns_comment, class: "form-control"
        p.help-block 【任意】備考があれば記入してください

    tr
      th = f.label :early_termination
      td
        .form-inline
          = f.check_box :early_termination, {}, true, false
    tr
      th = f.label :auto_extension
      td
        .form-inline
          = f.check_box :auto_extension, {}, true, false


  = f.button :button, data: { "disable-with" => "保存中..." }, class: "btn btn-default btn-square btn-submit center-block" do
    span.glyphicon.glyphicon-save
    span.btn-content 保存
