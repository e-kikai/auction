coffee:
  $ ->
    $('.js-csv-upload').fileinput
      showPreview: false
      maxFileCount: 20
      browseClass: 'btn btn-info fileinput-browse-button'
      browseIcon: '<span class="glyphicon glyphicon-folder-open"></span>'
      browseLabel: ' ファイル選択'
      removeClass: 'btn btn-warning'
      removeIcon: '<span class="glyphicon glyphicon-remove"></span>'
      removeLabel: ' キャンセル'
      uploadClass: 'btn btn-success fileinput-upload-button'
      uploadIcon: '<i class="fa fa-upload"></i>'
      uploadLabel: ' アップロード'
      allowedFileExtensions: ['jpeg', 'jpg', 'png', 'gif']
      msgValidationError: '''
        <span class="text-danger">
          <span class="glyphicon glyphicon-alert"></span>アップロードできるファイル形式はJPEG,GIF,PNGです。
        </span>
      '''

- if f.object.errors.full_messages.present?
  .col-md-offset-2.col-md-8
    .alert.alert-danger
      ul
        - f.object.errors.full_messages.each do |msg|
          li = msg

table.table.table-hover.table-condensed.form-table
  - if local_assigns[:template].present?
    tr
      th = f.label :name, "テンプレート名", class: :required
      td = f.text_field :name, class: "form-control", required: "required"
    / tr
    /   th = f.label :description, "共通コメント"
    /   td
    /     = f.text_area :description, class: "form-control description"
    /     p.help-block 商品詳細の下に共通に表示される部分です

    = f.hidden_field :template,       value: true

    = f.hidden_field :category_id,    value: 1
    = f.hidden_field :dulation_start, value: Time.at(0)
    = f.hidden_field :dulation_end,   value: Time.at(0)
    = f.hidden_field :start_price,    value: 1
    / = f.hidden_field :prompt_dicision_price, value: 1

    = f.hidden_field :description,    value: ""

  - else
    = f.hidden_field :template,       value: false
    = f.hidden_field :machinelife_id

    tr
      th = f.label :category_id, class: :required
      td = f.select :category_id, Category.options, {include_blank: "-- カテゴリ選択 --"}, class: "form-control", required: "required"
    tr.form-inline
      th = f.label :code
      td
        = f.text_field :code, class: "form-control short"
        span.help-block style="display:inline-block;" 【任意】この項目はユーザには表示されません
    tr
      th = f.label :name, class: :required
      td = f.text_field :name, class: "form-control", required: "required"

    tr
      th = f.label :description
      td = f.text_area :description, class: "form-control description"

    tr.form-inline
      th = f.label :dulation_start
      td = f.datetime_select :dulation_start, { default: (Time.now + 7.day), minute_step: 5, start_year: 2018 }, class: "form-control"
    tr.form-inline
      th = f.label :dulation_end
      td = f.datetime_select :dulation_end, { default: (Time.now + 14.day), minute_step: 5, start_year: 2018 }, class: "form-control"

    tr.form-inline
      / th = f.label :start_price, "開始価格(税抜)", class: :required
      th = f.label :start_price, "開始価格 (税込)", class: :required
      td = (f.text_field :start_price, class: "form-control price", required: "required") + " 円"
    tr.form-inline
      / th = f.label :lower_price, "最低落札価格(税抜)"
      th = f.label :lower_price, "最低落札価格 (税込)"
      td
        . = (f.text_field :lower_price, class: "form-control price") + " 円"
        p.help-block 【任意】設定すると、最低落札価格に達しない入札金額では、落札されなくなります

    tr.form-inline
      / th = f.label :prompt_dicision_price, "即売価格(税抜)"
      th = f.label :prompt_dicision_price, "即売価格 (税込)"
      td
        . = (f.text_field :prompt_dicision_price, class: "form-control price") + " 円"
        p.help-block 【任意】設定すると、即売価格で入札された時点で、入札終了・落札されます

    tr
      th 画像
      td
        . = file_field_tag "images[]", multiple: true, class: "js-csv-upload"
        p.help-block 20枚まで複数選択可。JPEG、GIF、PNGファイル

        = f.fields_for :product_images do |pi|
          .form_img
            - if pi.object.remote_image_url
              = image_tag pi.object.remote_image_url, style: "max-width:160px;max-height:120px;"
              = pi.hidden_field :remote_image_url
            - else
              = image_tag pi.object.image.thumb.url
              = pi.hidden_field :id
              = pi.check_box :_destroy, {}, 1, 0
              = pi.label :_destroy, "削除"
    tr
      th = f.label :youtube
      td = f.text_field :youtube, class: "form-control"
    tr
      th = f.label :hashtags
      td
        = f.text_area :hashtags, class: "form-control"
        p.help-block
          | キーワード検索、Googleなどの検索エンジンのキーワードになります。
          br
          | 商品名、メーカーの別名、能力値、用途、状態、一山商品の明細などを空白区切りで記述してください

  tr
    th = f.label :note
    td = f.text_area :note, class: "form-control description"

  tr
    th = f.label :addr_1, "発送元"
    td.form-inline
      = f.select :addr_1, ShippingFee::ADDRS, { prompt: "-- 都道府県を選択 --" }, { class: 'form-control short' }
      = f.text_field :addr_2, class: "form-control"

  tr
    th = f.label :shipping_user, class: :required
    td
      .form-inline
        - Product.shipping_users.each do |k, v|
          label.radio-inline = f.radio_button(:shipping_user, k, inline: true) + k
      . = f.text_field :shipping_comment, class: "form-control"
      p.help-block 【任意】備考があれば記入してください

  tr
    th = f.label :international
    td.form-inline
      - Product.internationals.each do |k, v|
        label.radio-inline = f.radio_button(:international, k, inline: true) + k

  tr
    th = f.label :shipping_no
    td = f.select :shipping_no, ShippingLabel.where(user_id: current_user.id).pluck(:name, :shipping_no), { include_blank: "設定しない"} , { class: "form-control short" }

  tr
    th = f.label :packing
    td = f.text_field :packing, class: "form-control"

  tr
    th = f.label :delivery_date
    td.form-inline
      - Product.delivery_dates.each do |k, v|
        label.radio-inline = f.radio_button(:delivery_date, k, inline: true) + k


  tr
    th = f.label :state
    td
      .form-inline
        - Product.states.each do |k, v|
          label.radio-inline = f.radio_button(:state, k, inline: true) + k
      . = f.text_field :state_comment, class: "form-control"
      p.help-block 【任意】備考があれば記入してください 例) ジャンク品、開封後一度も使っていません、など

  tr
    th = f.label :returns
    td
      .form-inline
        - Product.returns.each do |k, v|
          label.radio-inline = f.radio_button(:returns, k, inline: true) + k
      . = f.text_field :returns_comment, class: "form-control"
      p.help-block 【任意】備考があれば記入してください

  / tr
  /   th = f.label :early_termination
  /   td = f.check_box :early_termination, {}, true, false
  tr
    th = f.label :auto_extension
    td
      .form-inline
        - Product.auto_extensions.each do |k, v|
          label.radio-inline = f.radio_button(:auto_extension, k, inline: true) + k
      p.help-block 設定すると、終了日時の5分以内に入札されると、終了日時が自動的に5分間延長されるようになります

  tr
    th = f.label :auto_resale
    td.form-inline
      .
        = (f.select :auto_resale_date, ((1..14).map { |i| ["#{i}日", i] }.to_h), {}, { class: "form-control short" }) + " × "
        = (f.select :auto_resale, ({"再出品しない" => 0, "無制限" => 999}.merge((1..30).map { |i| ["#{i}回", i] }.to_h)), {}, { class: "form-control short" })
      p.help-block 落札されなかった場合、設定した回数だけ終了日時を延長します

= f.button :button, data: { "disable-with" => "保存中..." }, class: "btn btn-default btn-square btn-submit center-block" do
  span.glyphicon.glyphicon-save
  span.btn-content 保存
