- title = Product.status_label(params[:cond])

- set_meta_tags title: title
- breadcrumb    :myauction_something, title

h3 = title

= paginate @pproducts

- if @pproducts.length == 0
  p 出品している商品はありません
- else
  table.table.table-hover.table-condensed.table-striped.product-table
    tr
      th.img_mini
      th 管理番号
      th 商品名
      - if params[:cond].to_i == -1
        th 開始日時
      th 終了日時
      th.num 開始金額
      th.num 即決金額
      - if params[:cond].to_i == -1
        th 変更
        th 削除
      - elsif params[:cond].to_i == 1
        th.num 閲覧数
        th.num ウォッチ数
        th 再出品
      - elsif params[:cond].to_i == 2
        th.num 落札価格
        th.num 入札数
        th.num 閲覧数
        th.num ウォッチ数
        th 落札者
        th 取引
        th 手数料
        th 評価
      - elsif params[:cond].to_i == 3
        th.num 閲覧数
        th.num ウォッチ数
        th 再出品
      - else
        th.num 最高価格
        th.num 入札数
        th.num 閲覧数
        th.num ウォッチ数
        th 最高入札者
        th.num 残り時間
        / th 自社落札
        th 出品キャンセル
    - @pproducts.each do |pr|
      tr
        td.img_mini
          - if pr.product_images.first.try(:image)
            = link_to image_tag(pr.product_images.first.image.thumb.url), "/products/#{pr.id}"
        td = pr.code
        td = link_to pr.name, "/products/#{pr.id}"
        - if params[:cond].to_i == -1
          td = I18n.l(pr.dulation_end, format: :full_date)
        td = I18n.l(pr.dulation_end, format: :full_date)
        td.num = number_to_currency(pr.start_price)
        td.num = pr.prompt_dicision_price ? number_to_currency(pr.prompt_dicision_price) : "-"

        - if params[:cond].to_i == -1
          td = link_to({ action: :edit, id: pr.id }, class: "btn btn-warning") do
            span.glyphicon.glyphicon-edit
            =< "変更"
          td = link_to({ action: :destroy, id: pr.id }, method: :delete, data: { confirm: "#{pr.name}\n\nこの商品を削除しますか？", "disable-with" => "削除中..."}, class: "btn btn-danger") do
            span.glyphicon.glyphicon-remove
            =< "削除"
        - elsif params[:cond].to_i == 1
          td.num = pr.detail_logs_count
          td.num = pr.watches_count
          td = link_to({ action: :edit, id: pr.id }, class: "btn btn-success") do
            span.glyphicon.glyphicon-refresh
            =< "再出品"
        - elsif params[:cond].to_i == 2
          td.num = (pr.max_price.present? ? number_to_currency(pr.max_price) : "-")
          td.num = pr.bids_count > 0 ? link_to(number_with_delimiter(pr.bids_count), "/products/#{pr.id}/bids") : "-"
          td.num = pr.detail_logs_count
          td.num = pr.watches_count
          td.num = (pr.max_bid.present? ? pr.max_bid.user.account : "-")

          - if pr.max_bid.user_id != current_user.id
            td = link_to("/myauction/trades?product_id=#{pr.id}", class: "btn btn-success") do
              span.glyphicon.glyphicon-transfer
              =< "取引"
            td = number_to_currency(pr.max_price * 0.1)
            td.star = pr.star_view
          - else
            td 自社落札
            td
            td
        - elsif params[:cond].to_i == 3
          td.num = pr.detail_logs_count
          td.num = pr.watches_count
          th = link_to("/myauction/products/new?id=#{pr.id}", class: "btn btn-success") do
            span.glyphicon.glyphicon-refresh
            =< "別の商品として再出品"

        - else
          td.num = (pr.max_price.present? ? number_to_currency(pr.max_price) : "-")
          td.num = pr.bids_count > 0 ? link_to(number_with_delimiter(pr.bids_count), "/products/#{pr.id}/bids") : "-"
          td.num = pr.detail_logs_count
          td.num = pr.watches_count
          td.num = (pr.max_bid.present? ? pr.max_bid.user.account : "-")
          td.num = pr.remaining_time
          / td
          /   - if pr.prompt_dicision_price.present?
          /     = link_to({ action: :prompt, id: pr.id }, method: :post, data: { confirm: "#{pr.name}\n\nこの商品に即決価格で自社落札をおこないます。\n\nよろしいですか？", "disable-with" => "入札中..."}, class: "btn btn-success") do
          /       span.glyphicon.glyphicon-pencil
          /       =< "自社落札"
          / td = link_to({ action: :destroy, id: pr.id }, method: :delete, data: { confirm: "#{pr.name}\n\nこの商品の出品を取り消しますか？", "disable-with" => "取消中..."}, class: "btn btn-danger") do
          /     span.glyphicon.glyphicon-remove
          /     =< "取消"

          td = button_tag class: "btn btn-danger btn-cancel", data: { toggle: :modal, target: "#cancel-modal-#{pr.id}"} do
            span.glyphicon.glyphicon-remove
            =< "キャンセル"

- @pproducts.each do |pr|
  /// 出品キャンセルダイアログ ////
  .modal.fade id="cancel-modal-#{pr.id}"
    .modal-dialog
      .modal-content
        .modal-header
          = button_tag "×", class: :close, data: { dismiss: :modal }
          h4.modal-title 出品キャンセル
        .modal-body
          = form_for pr, url: "/myauction/products/#{pr.id}/cancel", method: :patch do |f|
            dl.dl-horizontal
              dt 管理番号
              dd = pr.code
              dt 商品名
              dd = pr.name
            .form-group
              = f.label :cancel
              = f.text_area :cancel, required: "required", class: 'form-control'

            = f.button :button, data: { "disable-with" => "処理中..." }, class: "btn btn-default btn-square btn-submit center-block" do
              span.glyphicon.glyphicon-remove
              span.btn-content 出品キャンセル
