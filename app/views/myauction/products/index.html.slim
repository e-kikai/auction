- title = Product.status_label(params[:cond])

- set_meta_tags title: title
- breadcrumb    :myauction_something, title

h3 = title

/ = @pproducts.to_sql
= paginate @pproducts

- if @pproducts.length == 0
  p 出品している商品はありません
- else
  table.table.table-hover.table-condensed.table-striped.product-table
    tr
      th.img_mini
      th 商品名
      th 開始日時
      th 終了日時
      th.num 開始金額
      th.num 即決金額
      - if params[:cond].to_i == -1
        th 変更
        th 削除
      - elsif params[:cond].to_i == 1
        th 再出品
      - elsif params[:cond].to_i == 2
        th.num 最高価格
        th.num 入札数
        th 最高入札者
        th 対応
      - else
        th.num 最高価格
        th.num 入札数
        th 最高入札者
        th.num 残り時間
        th 出品取消
    - @pproducts.each do |pr|
      tr
        td.img_mini
          - if pr.product_images.first.present?
            = link_to image_tag(pr.product_images.first.image.thumb.url), "/products/#{pr.id}"
        td = link_to pr.name, "/products/#{pr.id}"
        td = pr.dulation_start
        td = pr.dulation_end
        td.num = number_to_currency(pr.start_price)
        td.num = number_to_currency(pr.prompt_dicision_price)

        - if params[:cond].to_i == -1
          td = link_to({ action: :edit, id: pr.id }, class: "btn btn-warning") do
            span.glyphicon.glyphicon-edit
            =< "変更"
          td = link_to({ action: :destroy, id: pr.id }, method: :delete, data: { confirm: "#{pr.name}\n\nこの商品を削除しますか？", "disable-with" => "削除中..."}, class: "btn btn-danger") do
            span.glyphicon.glyphicon-remove
            =< "削除"
        - elsif params[:cond].to_i == 1
          th = link_to({ action: :edit, id: pr.id }, class: "btn btn-success") do
            span.glyphicon.glyphicon-refresh
            =< "再出品"
        - elsif params[:cond].to_i == 2
          td.num = (pr.max_price.present? ? number_to_currency(pr.max_price) : "-")
          td.num = pr.bids_count
          td.num = (pr.max_bid.present? ? pr.max_bid.user.account : "-")
          th 対応
        - else
          td.num = (pr.max_price.present? ? number_to_currency(pr.max_price) : "-")
          td.num = pr.bids_count
          td.num = (pr.max_bid.present? ? pr.max_bid.user.account : "-")
          td.num = pr.remaining_time
          td = link_to({ action: :destroy, id: pr.id }, method: :delete, data: { confirm: "#{pr.name}\n\nこの商品の出品を取り消しますか？", "disable-with" => "取消中..."}, class: "btn btn-danger") do
              span.glyphicon.glyphicon-remove
              =< "取消"
