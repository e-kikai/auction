- set_meta_tags title: "問い合わせ履歴"
- breadcrumb :system_trades

// javascript:
//   $(function() {
//       $('tr').on("mouseenter", function() {
//           thread = $(this).data("thread")
//           $('tr.' + thread + ' td.title').css("background", "#ffd700")
//       });
//
//       $('tr').on("mouseleave", function() {
//           thread = $(this).data("thread")
//           $('tr.' + thread + ' td.title').css("background", "")
//       });
//   });

/ css:
/   td.title {
/     transition: 0.5s;
/   }

= form_tag("/system/trades", method: "get", class: "form-inline filtering-form") do
  = select_tag :company, options_for_select(@company_selectors, selected: @company), {include_blank: "すべての出品会社", class: "form-control"}

  = button_tag "検索",  class: "btn btn-info" do
    span.glyphicon.glyphicon-search
    span.btn-content 検索
/
/   = button_tag :submit, name: :format, value: :csv, data: { "disable-with" => "出力中..." }, class: "btn btn-default btn-square" do
/     span.glyphicon.glyphicon-download-alt
/     span.btn-content CSV出力


.row
  .col-lg-12.col-md-12.col-sm-12
    = paginate @pthreads

    .table-responsive
      table.table.table-hover.table-condensed.table-striped.product-table
        thead
          tr
            th.num 商品ID
            th 商品 開始金額/入札数/最高金額
            th.sepa 状況
            th.sepa 出品会社
            th.name.sepa ユーザ
            th.num.sepa 書込数
            th 開始日時
            th 最終更新

        - @pthreads.each do |th|
          - gro = [th.product_id, th.owner_id]

          tr
            td.num = th.product_id
            td
              . = th.product&.name
              . = "#{number_to_currency(th.product&.start_price)} / #{number_with_delimiter(th.product&.bids_count)} / #{number_to_currency(th.product&.max_price)}"

            td.sepa
              - if th.product&.trade_status(th.owner) == "落札"
                span = "落札 : "
                - if th.product&.star
                  span.star = th.product&.star_view
                - else
                  | 受取確認・評価前
              - else
                = th.product&.trade_status(th.owner)
            td.sepa
              . = th.product&.user_id
              . = th.product&.user&.company_remove_kabu
            td.name.sepa
              . = "#{th.owner_id} | #{th.owner&.account}"
              . = "#{th.owner&.company_remove_kabu} #{th.owner&.name}".strip
            td.num.sepa = link_to "/system/trades/#{th.product_id}/#{th.owner_id}", class: "btn btn-success btn-md" do
              span.glyphicon.glyphicon-comment
              span.btn-content = "#{@thread_counts_02[gro]}"
            td = @thread_starts_02[gro]
            td = th.created_at


        thead
          tr
            th.num 商品ID
            th 商品 開始金額/入札数/最高金額
            th.sepa 状況
            th.sepa 出品会社
            th.name.sepa ユーザ
            th.num.sepa 書込数
            th 開始日時
            th 最終更新
    = paginate @pthreads





    hr

    = paginate @paginatable_array
    .table-responsive
      table.table.table-hover.table-condensed.table-striped.product-table
        thead
          tr
            th.num 商品ID
            th 商品 開始金額/入札数/最高金額
            th.sepa 状況
            th.sepa 出品会社
            th.name.sepa ユーザ
            th.num.sepa 書込数
            th 開始日時
            th 最終更新

        - @pthread_lasts.each do |key, val|
          - product = @products[key[0]]
          - if @owners[key[1]]
            - owner_id = key[1]
            - owner    = @owners[key[1]]
          - else
            - owner_id = product.max_bid&.user_id
            - owner    = product.max_bid&.user

          tr
            td.num = key[0]
            td
              . = product.name
              . = "#{number_to_currency(product.start_price)} / #{number_with_delimiter(product.bids_count)} / #{number_to_currency(product.max_price)}"
            td.sepa
              - if product.trade_status(owner) == "落札"
                span = "落札 : "
                - if product.star
                  span.star = product.star_view
                - else
                  | 受取確認・評価前
              - else
                = product.trade_status(owner)
            td.sepa
              . = product.user_id
              . = product.user.try(:company_remove_kabu)
            td.name.sepa
              . = "#{owner_id} | #{owner.account}"
              . = "#{owner.try(:company_remove_kabu)} #{owner.try(:name)}".strip
            td.num.sepa = link_to "/system/trades/#{key[0]}/#{owner_id}", class: "btn btn-success btn-md" do
              span.glyphicon.glyphicon-comment
              span.btn-content = "#{@thread_counts[key]}"
            td = @thread_starts[key]
            td = val

        thead
          tr
            th.num 商品ID
            th 商品 開始金額/入札数/最高金額
            th.sepa 状況
            th.sepa 出品会社
            th.name.sepa ユーザ
            th.num.sepa 書込数
            th 開始日時
            th 最終更新

    = paginate @paginatable_array

/ = paginate @ptrades
/ .table-responsive
/   table.table.table-hover.table-condensed.table-striped.product-table
/     thead
/       tr
/         th.num ID
/         th.sepa 日時
/         th.name 商品 入札数/開始金額/最高金額
/         th.sepa 状況
/         th.name.text-danger 出品会社
/         th.sepa
/         th
/         th.name.sepa.text-info ユーザ
/         th 内容
/
/     - @ptrades.each do |tr|
/       - if tr.owner_id
/         - owner_id = owner_id
/         - owner    = owner
/       - else
/         - owner_id = tr.product.try(:max_bid).try(:user_id)
/         - owner    = tr.product.try(:max_bid).try(:user)
/
/       tr class="#{tr.product_id}_#{owner_id}" data-thread="#{tr.product_id}_#{owner_id}"
/         td.num = tr.id
/         td.sepa = tr.created_at
/
/         td.name.title
/           . = tr.product_id
/           . = link_to tr.product.name, "/products/#{tr.product_id}", target: "_blank"
/           . = "#{number_with_delimiter(tr.product.bids_count)} / #{number_to_currency(tr.product.start_price)} / #{number_to_currency(tr.product.max_price)}"
/
/         td.sepa
/
/         td.name
/           .text-danger = tr.product.try(:user_id)
/           . = tr.product.try(:user).try(:company)
/
/         td.sepa
/           - if tr.user_id == tr.product.try(:user_id)
/             span.glyphicon.glyphicon-arrow-right.text-danger
/         td
/           - unless tr.user_id == tr.product.try(:user_id)
/             span.glyphicon.glyphicon-arrow-left.text-info
/
/         td.name.sepa
/           .text-info = owner_id
/           . = "#{owner.try(:company)} #{owner.try(:name)}".strip
/
/         td = simple_format(tr.comment)
/
/
/     thead
/       tr
/         th.num ID
/         th.sepa 日時
/         th.name 商品 入札数/開始金額/最高金額
/         th.sepa 状況
/         th.name.text-danger 出品会社
/         th.sepa
/         th
/         th.name.sepa.text-info ユーザ
/         th 内容
/
/ = paginate @ptrades
